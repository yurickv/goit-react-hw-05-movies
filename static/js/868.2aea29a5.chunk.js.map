{"version":3,"file":"static/js/868.2aea29a5.chunk.js","mappings":"8LAUaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,kMCdFC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAc,mCAAG,WAAOC,GAAP,yFACHH,EAAAA,EAAAA,IAAA,sCAAyCC,GAC5D,CAAEG,OAAQD,EAAWC,SAFC,uBAClBC,EADkB,EAClBA,KADkB,kBAInBA,EAAKC,SAJc,2CAAH,sDAOdC,EAAU,mCAAG,WAAOC,EAASL,GAAhB,yFACCH,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,oBAAuCP,EAAvC,mBACnB,CAAEG,OAAQD,EAAWC,SAFH,uBACdC,EADc,EACdA,KADc,kBAIfA,GAJe,2CAAH,wDAOVI,EAAc,mCAAG,WAAOC,EAAMP,GAAb,yFACHH,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDS,EAApD,+BACnB,CAAEN,OAAQD,EAAWC,SAFC,uBAClBC,EADkB,EAClBA,KADkB,kBAInBA,EAAKC,SAJc,2CAAH,wDAOdK,EAAY,mCAAG,WAAOH,EAASL,GAAhB,yFACDH,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA+CP,EAA/C,mBACnB,CAAEG,OAAQD,EAAWC,SAFD,uBAChBC,EADgB,EAChBA,KADgB,kBAIjBA,EAAKO,MAJY,2CAAH,wDAOZC,EAAe,mCAAG,WAAOL,EAASL,GAAhB,yFACJH,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA+CP,EAA/C,mBACnB,CAAEG,OAAQD,EAAWC,SAFE,uBACnBC,EADmB,EACnBA,KADmB,kBAIhBA,GAJgB,2CAAH,uD,6EC/BfS,EAAS,WAClB,OACI,+BACI,SAAC,KAAD,CACIC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPvB,MAAM,UACNwB,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAIxB,C,4GCbYC,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClBC,GAAWC,EAAAA,EAAAA,MAGjB,OACI,SAAC,KAAD,CAAYC,GAAG,KAAf,SACKH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAd,OACR,yBACI,UAAC,KAAD,CAASC,GAAE,UAAKC,EAAAA,EAAAA,OAAL,YAAsBH,GAAMI,MAAO,CAAEC,KAAMV,GAAtD,WACI,gBAAKW,IAPD,kCAOwBL,EAAaM,IAAKR,KAC9C,SAAC,KAAD,UAAaA,QAHZC,EADD,KAUvB,C,qIClBYQ,EAAQ5C,EAAAA,GAAAA,GAAH,6FAED,qBAAG6C,MAAkBC,MAAMC,MAA3B,IACE,qBAAGF,MAAkB3C,MAAM,EAA3B,IAGN8C,EAAahD,EAAAA,GAAAA,GAAH,2RAaViD,EAAajD,EAAAA,GAAAA,GAAH,6CACN,qBAAG6C,MAAkBC,MAAMI,SAA3B,G,mMCpBJC,EAAmBnD,EAAAA,GAAAA,KAAH,mHAIV,qBAAG6C,MAAkB3C,MAAM,EAA3B,IAINkD,EAAYpD,EAAAA,GAAAA,OAAH,0PACL,qBAAG6C,MAAkBC,MAAMI,SAA3B,IACA,qBAAGL,MAAkB3C,MAAM,EAA3B,IACJ,qBAAG2C,MAAkB3C,MAAM,EAA3B,IACM,qBAAG2C,MAAkBQ,MAAMC,MAA3B,IAUNC,EAAcvD,EAAAA,GAAAA,MAAH,kEACX,qBAAG6C,MAAkB3C,MAAM,EAA3B,IACM,qBAAG2C,MAAkBQ,MAAMC,MAA3B,I,SCtBNE,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOzC,EAAP,KAAa0C,EAAb,KAWA,OACI,UAACR,EAAD,CAAkBM,SARD,SAACG,GAClBA,EAAIC,iBACJJ,EAASxC,GACT0C,EAAQ,GAEX,EAGG,WACI,SAACJ,EAAD,CAAaO,KAAK,OAAOC,MAAO9C,EAAM+C,SAZzB,SAACJ,GAClBD,EAAQC,EAAIK,OAAOF,MACtB,KAWO,UAACX,EAAD,CAAWU,KAAK,SAAhB,UAAyB,WAErB,SAAC,MAAD,CAAUI,KAAK,cAI9B,E,oBCHD,EAde,WAEX,MCN0B,WAC1B,OAAwCR,EAAAA,EAAAA,UAAS,IAAjD,eAAOS,EAAP,KAAqBC,EAArB,KACA,GAAkCV,EAAAA,EAAAA,WAAS,GAA3C,eAAOW,EAAP,KAAkBC,EAAlB,KACA,GAA0BZ,EAAAA,EAAAA,UAAS,MAAnC,eAAOa,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAsCA,OAnCAC,EAAAA,EAAAA,YAAU,WACN,IAAMlE,EAAa,IAAImE,gBACjB5D,EAAOyD,EAAaI,IAAI,SAE9B,GAAK7D,EAAL,CAIA,IAAM8D,EAAS,mCAAG,oGAEVT,GAAa,GACbE,EAAS,MAHC,UAKkBxD,EAAAA,EAAAA,GAAeC,EAAMP,GALvC,UAKJsE,EALI,OAMVZ,EAAgBY,GACXA,EAAcC,OAPT,wBAQNT,EAAS,gEAAD,OAAevD,EAAf,sDARF,6EAYVuD,EAAS,KAAMU,SAZL,yBAcVZ,GAAa,GACb5D,EAAWyE,QAfD,6EAAH,qDAkBfJ,GApBC,CA2BJ,GAAE,CAACL,IAEG,CAAEP,aAAAA,EAAcE,UAAAA,EAAWE,MAAAA,EAAOa,aADpB,SAACC,GAAYV,EAAgB,CAAEU,MAAAA,GAAU,EAEjE,CDrC4DC,GAAjDnB,EAAR,EAAQA,aAAcE,EAAtB,EAAsBA,UAAWE,EAAjC,EAAiCA,MAAOa,EAAxC,EAAwCA,aAGxC,OACI,UAACrF,EAAA,EAAD,YACI,SAACyD,EAAD,CAAYC,SAAU2B,IACrBf,IAAa,SAAChD,EAAA,EAAD,IACbkD,IAAS,SAAC,KAAD,UAAQA,IACjBJ,IAAgB,SAACtC,EAAA,EAAD,CAAWC,OAAQqC,MAG/C,C","sources":["Servise/Box.jsx","Servise/Movie-serviseAPI.js","components/Loader/Loader.jsx","components/MuvieList/FilmsList.jsx","pages/Home/Home.styled.js","components/SearchForm/SearhForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","Hooks/useFetch_SearchFilm.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  typography,\n  flexbox,\n  border,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  typography,\n  flexbox,\n  border\n);","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '543e36a38e5b1b446ccf2af6eb6b1556'\n\nexport const getTrendMovies = async (controller) => {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`,\n        { signal: controller.signal }\n    );\n    return data.results;\n};\n\nexport const getMovieID = async (movieId, controller) => {\n    const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n        { signal: controller.signal }\n    );\n    return data;\n};\n\nexport const getMovieSearch = async (film, controller) => {\n    const { data } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${film}&page=1&include_adult=false`,\n        { signal: controller.signal }\n    );\n    return data.results;\n};\n\nexport const getMovieCast = async (movieId, controller) => {\n    const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n        { signal: controller.signal }\n    );\n    return data.cast;\n};\n\nexport const getMovieReviews = async (movieId, controller) => {\n    const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`,\n        { signal: controller.signal }\n    );\n        return data;\n};","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (\n        <>\n            <ThreeDots\n                height=\"80\"\n                width=\"80\"\n                radius=\"9\"\n                color=\"#4fa94d\"\n                ariaLabel=\"three-dots-loading\"\n                wrapperStyle={{}}\n                wrapperClassName=\"\"\n                visible={true}\n            />\n        </>\n    );\n};","import { MuviesList, MovieTitle } from '../../pages/Home/Home.styled'\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { routes } from '../../Servise/routes';\n\nexport const FilmsList = ({ movies }) => {\n    const location = useLocation();\n    const imageDefaultUrl = 'https://image.tmdb.org/t/p/w300';\n\n    return (\n        <MuviesList as=\"ul\">\n            {movies.map(({ title, id, poster_path }) => (\n                <li key={id}>\n                    <NavLink to={`${routes.MOVIES}/${id}`} state={{ from: location }}>\n                        <img src={imageDefaultUrl + poster_path} alt={title} />\n                        <MovieTitle>{title}</MovieTitle>\n                    </NavLink>\n                </li>\n            ))}\n        </MuviesList>\n    )\n}","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-family: ${({ theme }) => theme.fonts.roboto};\n  margin-bottom: ${({ theme }) => theme.space[4]}px;\n`;\n\nexport const MuviesList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 20px;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-family: ${({ theme }) => theme.fonts.monospace};\n`;","import styled from 'styled-components';\n\nexport const SearchFormStyled = styled.form`\n  width: 350px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: ${({ theme }) => theme.space[3]}px;\n  \n`;\n\nexport const BtnSearch = styled.button`\n  font-family: ${({ theme }) => theme.fonts.monospace};\n  margin-left: ${({ theme }) => theme.space[3]}px;\n  padding: ${({ theme }) => theme.space[2]}px;\n  border-radius: ${({ theme }) => theme.radii.normal};\n  background-color: rgb(4, 170, 109);\n  color: white;\n\n  :hover,\n  :focus {\n    background-color: #059862;\n    cursor: pointer;\n  }\n`;\nexport const SearchField = styled.input`\n  padding: ${({ theme }) => theme.space[3]}px;\n  border-radius: ${({ theme }) => theme.radii.normal};\n`;\n","import { FiSearch } from 'react-icons/fi';\nimport { BtnSearch, SearchFormStyled, SearchField } from './SearhForm.styled';\nimport { useState } from 'react';\n\nexport const SearchForm = ({ onSubmit }) => {\n    const [film, setFilm] = useState('');\n    const handleChange = (evt) => {\n        setFilm(evt.target.value);\n    }\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        onSubmit(film);\n        setFilm('');\n\n    }\n\n    return (\n        <SearchFormStyled onSubmit={handleSubmit}>\n            <SearchField type=\"text\" value={film} onChange={handleChange} />\n            <BtnSearch type=\"submit\">\n                Search_\n                <FiSearch size=\"16px\" />\n            </BtnSearch>\n        </SearchFormStyled>\n    );\n};\n","import { useFetchSearch } from '../../Hooks/useFetch_SearchFilm';\nimport { Loader } from '../../components/Loader/Loader';\nimport { FilmsList } from 'components/MuvieList/FilmsList';\nimport { SearchForm } from '../../components/SearchForm/SearchForm'\nimport { Title } from '../Home/Home.styled';\nimport { Box } from 'Servise/Box';\n\n\nconst Movies = () => {\n\n    const { moviesSearch, isLoading, error, handleChange } = useFetchSearch();\n\n\n    return (\n        <Box >\n            <SearchForm onSubmit={handleChange} />\n            {isLoading && <Loader />}\n            {error && <Title>{error}</Title>}\n            {moviesSearch && <FilmsList movies={moviesSearch} />}\n        </Box>\n    );\n};\nexport default Movies;","import { useState, useEffect } from 'react';\nimport { getMovieSearch } from 'Servise/Movie-serviseAPI';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const useFetchSearch = () => {\n    const [moviesSearch, setmoviesSearch] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n\n    useEffect(() => {\n        const controller = new AbortController();\n        const film = searchParams.get('query');\n\n        if (!film) {\n            return;\n        };\n\n        const fetchData = async () => {\n            try {\n                setIsLoading(true);\n                setError(null);\n\n                const fetchedMuvies = await getMovieSearch(film, controller);\n                setmoviesSearch(fetchedMuvies);\n                if (!fetchedMuvies.length) {\n                    setError(`Зображення ${film} відсутні`);\n                    return;\n                };\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setIsLoading(false);\n                controller.abort();\n            }\n        };\n        fetchData();\n\n        // return () => {\n        //     // controller.abort();\n        //     setError(null);\n        //     setmoviesSearch([]);\n        // };\n    }, [searchParams]);\n    const handleChange = (query) => { setSearchParams({ query }) }\n    return { moviesSearch, isLoading, error, handleChange };\n};"],"names":["Box","styled","color","space","layout","typography","flexbox","border","axios","API_KEY","getTrendMovies","controller","signal","data","results","getMovieID","movieId","getMovieSearch","film","getMovieCast","cast","getMovieReviews","Loader","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","FilmsList","movies","location","useLocation","as","map","title","id","poster_path","to","routes","state","from","src","alt","Title","theme","fonts","roboto","MuviesList","MovieTitle","monospace","SearchFormStyled","BtnSearch","radii","normal","SearchField","SearchForm","onSubmit","useState","setFilm","evt","preventDefault","type","value","onChange","target","size","moviesSearch","setmoviesSearch","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","useEffect","AbortController","get","fetchData","fetchedMuvies","length","message","abort","handleChange","query","useFetchSearch"],"sourceRoot":""}