{"version":3,"file":"static/js/803.0eda16cd.chunk.js","mappings":"0RAoBA,EAda,WACT,MCJ0B,WAC1B,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAa,IAAIC,gBAEjBC,EAAS,mCAAG,oGAEVN,GAAa,GAFH,UAIqBO,EAAAA,EAAAA,IAAeH,GAJpC,OAIJI,EAJI,OAKVV,EAAgBU,GALN,gDAOVN,EAAS,KAAMO,SAPL,yBASVT,GAAa,GACbI,EAAWM,QAVD,4EAAH,qDAafJ,GAKH,GAAE,IAEI,CAAET,aAAAA,EAAcE,UAAAA,EAAWE,MAAAA,EACrC,CDzB8CU,GAAnCd,EAAR,EAAQA,aAAcE,EAAtB,EAAsBA,UAAWE,EAAjC,EAAiCA,MAEjC,OACI,UAACW,EAAA,EAAD,YACI,SAAC,KAAD,UAAO,mBACNb,IAAa,SAACc,EAAA,EAAD,IACbZ,IAAS,SAAC,KAAD,UAAQA,IACjBJ,EAAaiB,SAAU,SAACC,EAAA,EAAD,CAAWC,OAAQnB,MAItD,C","sources":["pages/Home.jsx","Hooks/useFetchTrends.jsx"],"sourcesContent":["import { Title } from '../styled-component/Home.styled';\nimport { Box } from '../styled-component/Box'\nimport { useFetchTrends } from 'Hooks/useFetchTrends';\nimport { Loader } from 'components/Loader';\nimport { FilmsList } from 'components/FilmsList';\n\nconst Home = () => {\n    const { moviesTrends, isLoading, error } = useFetchTrends();\n\n    return (\n        <Box>\n            <Title>Trending today</Title>\n            {isLoading && <Loader />}\n            {error && <Title>{error}</Title>}\n            {moviesTrends.length && <FilmsList movies={moviesTrends} />}\n        </Box>\n\n    )\n};\n\nexport default Home;","import { useState, useEffect } from 'react';\nimport { getTrendMovies } from 'Servise/Movie-serviseAPI';\n\nexport const useFetchTrends = () => {\n    const [moviesTrends, setMoviesTrends] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const controller = new AbortController();\n\n        const fetchData = async () => {\n            try {\n                setIsLoading(true);\n\n                const fetchedCountries = await getTrendMovies(controller);\n                setMoviesTrends(fetchedCountries);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setIsLoading(false);\n                controller.abort();\n            }\n        };\n        fetchData();\n\n        // return () => {\n        //     controller.abort();\n        // };\n    }, []);\n\n    return { moviesTrends, isLoading, error };\n};"],"names":["useState","moviesTrends","setMoviesTrends","isLoading","setIsLoading","error","setError","useEffect","controller","AbortController","fetchData","getTrendMovies","fetchedCountries","message","abort","useFetchTrends","Box","Loader","length","FilmsList","movies"],"sourceRoot":""}