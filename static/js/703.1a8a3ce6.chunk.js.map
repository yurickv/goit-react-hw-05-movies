{"version":3,"file":"static/js/703.1a8a3ce6.chunk.js","mappings":"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","sources":["Servise/Box.jsx","Servise/Movie-serviseAPI.js","components/Loader/Loader.jsx","components/MuvieList/FilmsList.jsx","pages/Home/Home.jsx","Hooks/useFetchTrends.jsx","pages/Home/Home.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  typography,\n  flexbox,\n  border,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  typography,\n  flexbox,\n  border\n);","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '543e36a38e5b1b446ccf2af6eb6b1556'\n\nexport const getTrendMovies = async (controller) => {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`,\n        { signal: controller.signal }\n    );\n    return data.results;\n};\n\nexport const getMovieID = async (movieId, controller) => {\n    const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n        { signal: controller.signal }\n    );\n    return data;\n};\n\nexport const getMovieSearch = async (film, controller) => {\n    const { data } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${film}&page=1&include_adult=false`,\n        { signal: controller.signal }\n    );\n    return data.results;\n};\n\nexport const getMovieCast = async (movieId, controller) => {\n    const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n        { signal: controller.signal }\n    );\n    return data.cast;\n};\n\nexport const getMovieReviews = async (movieId, controller) => {\n    const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`,\n        { signal: controller.signal }\n    );\n        return data;\n};","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (\n        <>\n            <ThreeDots\n                height=\"80\"\n                width=\"80\"\n                radius=\"9\"\n                color=\"#4fa94d\"\n                ariaLabel=\"three-dots-loading\"\n                wrapperStyle={{}}\n                wrapperClassName=\"\"\n                visible={true}\n            />\n        </>\n    );\n};","import { MuviesList, MovieTitle } from '../../pages/Home/Home.styled'\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { routes } from '../../Servise/routes';\n\nexport const FilmsList = ({ movies }) => {\n    const location = useLocation();\n    const imageDefaultUrl = 'https://image.tmdb.org/t/p/w300';\n\n    return (\n        <MuviesList as=\"ul\">\n            {movies.map(({ title, id, poster_path }) => (\n                <li key={id}>\n                    <NavLink to={`${routes.MOVIES}/${id}`} state={{ from: location }}>\n                        <img src={imageDefaultUrl + poster_path} alt={title} />\n                        <MovieTitle>{title}</MovieTitle>\n                    </NavLink>\n                </li>\n            ))}\n        </MuviesList>\n    )\n}","import { Title } from './Home.styled';\nimport { Box } from '../../Servise/Box'\nimport { useFetchTrends } from 'Hooks/useFetchTrends';\nimport { Loader } from 'components/Loader/Loader';\nimport { FilmsList } from 'components/MuvieList/FilmsList';\n\nconst Home = () => {\n    const { moviesTrends, isLoading, error } = useFetchTrends();\n\n    return (\n        <Box>\n            <Title>Trending today</Title>\n            {isLoading && <Loader />}\n            {error && <Title>{error}</Title>}\n            {moviesTrends.length && <FilmsList movies={moviesTrends} />}\n        </Box>\n\n    )\n};\n\nexport default Home;","import { useState, useEffect } from 'react';\nimport { getTrendMovies } from 'Servise/Movie-serviseAPI';\n\nexport const useFetchTrends = () => {\n    const [moviesTrends, setMoviesTrends] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const controller = new AbortController();\n\n        const fetchData = async () => {\n            try {\n                setIsLoading(true);\n\n                const fetchedCountries = await getTrendMovies(controller);\n                setMoviesTrends(fetchedCountries);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setIsLoading(false);\n                controller.abort();\n            }\n        };\n        fetchData();\n\n        // return () => {\n        //     controller.abort();\n        // };\n    }, []);\n\n    return { moviesTrends, isLoading, error };\n};","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-family: ${({ theme }) => theme.fonts.roboto};\n  margin-bottom: ${({ theme }) => theme.space[4]}px;\n`;\n\nexport const MuviesList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 20px;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-family: ${({ theme }) => theme.fonts.monospace};\n`;"],"names":["Box","styled","color","space","layout","typography","flexbox","border","axios","API_KEY","getTrendMovies","controller","signal","data","results","getMovieID","movieId","getMovieSearch","film","getMovieCast","cast","getMovieReviews","Loader","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","FilmsList","movies","location","useLocation","as","map","title","id","poster_path","to","routes","state","from","src","alt","useState","moviesTrends","setMoviesTrends","isLoading","setIsLoading","error","setError","useEffect","AbortController","fetchData","fetchedCountries","message","abort","useFetchTrends","length","Title","theme","fonts","roboto","MuviesList","MovieTitle","monospace"],"sourceRoot":""}